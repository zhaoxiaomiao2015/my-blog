									git初识
      git,第一次与它亲密接触是在2015年5月11日，也是在这天，我才知道了这是一个什么样的软件工具.所谓的git就是一个分布式版本控制系统。那么何为分布式版本控制系统呢，我的理解是这样的，有一台远程的服务器，和多台客户端，然后每台客户端都会安装git这个工具。在通过一些了命令将客户端与这个服务器连接上（连接的命令将在下面作介绍），项目是部署在这个服务其中的，让后每个客户端通过与服务器连接上通过git下载项目到各个客户端，此时每个客户端都会有整个项目的代码。每个客户端再做各自的修改，当有一台客户端修改好了之后通过git上传到服务器上，当有第二台客户端做好修改之后准备上传时，git会提示该用户本地的项目已不是最新的版本了，必须下载最新项目版本之后方可上载，当更新了本地项目版本之后做了修改就可以上传了，这个上传别非将整个项目上传上去，而是将会将修改的部分上传上去并记录下来。其他客户端修改好了之后也必须作相同的操作之后方可上传。
       下面来大概介绍以下自己理解的一些命令。因为我的系统是Linux发行版ubuntu,所以我就以我的系统为例，其他的发行版中命令也都大同小异，只是有些细微的差别。接下来我将从？？个方面来简介gitd的一些简单的操作命令。
	第一步，我们需要建立git与github的连接配置，执行下面两行命令：
	git  config  --global  user.name  ''zhaoxiaomiao2015'' （名字为自己github上的姓名）
	git  config  --global  user.eaml  ''micsoftzhaoxiaomiao@outlook.com'' (后面输入自己的邮箱)
	第二步，我们需要在自己的home目录下建立一个目录project，这个目录将作为我们以后所有项      目的存放地点，然后再在其下面建立一个目录my-blog,作为写博客的项目的目录，执行下列命令：
	mkdir  project/my-blog 
	第三步，在目录project/my-blog 下初始本地仓库，执行下列命令：
	git  init
      当执行上述命令之后我们已经初始化好了一个本次的仓库my-blog，下面我们就可以在这个仓库中创建需要被管理的文件了。
	第四步，创建需要被管理的一个文件
	file firs-blog.txt
     当文件创建好了之后，我们可以使用各种编辑工具编辑内容，内容编辑好了之后执行第五步；
	第五步，将文件放入临时区，执行下列命令：
	git  add first-blog.txt
	第六步，我们需要把文件提交到本地的仓库，同时写出注释，执行下列命令：
	git  commit   -m ' 这是第一次提交'
	第七步，我们将本地文件同步到远程的仓库中去，所以我们需要去github上建立一个新的仓库first-blog;同时记录下这个仓库的地址；
	第八步，我们需要将本地文件同不到远程的仓库中去，先指定地址，执行下列命令：
		git  remote add origin  “git@github.com:zhaoxiaomiao2015/first-blog.git”
		第九步，将文件push到远程仓库中，执行下列命令：
		git push  -u  origin master  （初次使用需要带上参数，第二次则可以不用带参数了）
      通过上面的九步我们就完成了一个建立本地仓库和远程仓库，并在本地建立文件，最后push到远程仓库的全部过程。
       当文件修改完成之后，可以重复操作，第五步，第六步，第九步即可，在六步执行完成之后，我们可以执行下列命令来查看修改后的不同：
	git  diff
   之后再去仓库中查看对应项目中的文件，会发现文件已经被修改了。 以上就是最简单的修改文件在到远程仓库的过程，这就是目前我对git的了解和一些基本的操作。

